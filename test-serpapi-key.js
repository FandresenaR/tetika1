/**
 * Script de test pour v√©rifier le fonctionnement de SerpAPI
 * Ex√©cutez ce script pour tester si votre cl√© SerpAPI fonctionne correctement
 */

// Simuler l'environnement Next.js
const nextMock = {
  request: {
    json: async () => ({
      tool: 'multi_search',
      args: {
        provider: 'serpapi',
        query: 'test de recherche Tetika',
        apiKeys: {
          serpapi: process.env.SERPAPI_API_KEY || 'VOTRE_CLE_SERPAPI_ICI'
        }
      }
    })
  }
};

// Import dynamique pour √©viter les erreurs de module
async function testSerpAPI() {
  try {
    console.log('üß™ Test de la cl√© SerpAPI...');
    
    // V√©rifier si la cl√© API est d√©finie
    const serpApiKey = process.env.SERPAPI_API_KEY;
    if (!serpApiKey) {
      console.error('‚ùå SERPAPI_API_KEY n\'est pas d√©finie dans les variables d\'environnement');
      console.log('üí° D√©finissez SERPAPI_API_KEY=votre_cle_ici avant d\'ex√©cuter ce script');
      return;
    }
    
    console.log(`‚úÖ Cl√© SerpAPI trouv√©e: ${serpApiKey.substring(0, 10)}...`);
    console.log(`üìè Longueur de la cl√©: ${serpApiKey.length} caract√®res`);
    
    // Test de format basique
    if (serpApiKey.length === 64 && /^[0-9a-f]{64}$/i.test(serpApiKey)) {
      console.log('‚úÖ Format de cl√© SerpAPI valide (64 caract√®res hexad√©cimaux)');
    } else {
      console.warn('‚ö†Ô∏è  Format de cl√© SerpAPI inhabituel');
    }
    
    console.log('üöÄ Test termin√©. V√©rifiez les logs dans l\'interface Tetika pour plus de d√©tails.');
    
  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error);
  }
}

// Ex√©cuter le test si ce script est appel√© directement
if (require.main === module) {
  testSerpAPI();
}

module.exports = { testSerpAPI };
